---
# The Ansible config runs an aptitude safe-upgrade on every playbook invocation,
# which will clobber the locally built packages with prod packages from the apt
# repo. Let's set the packages to "hold" so they don't auto-upgrade.

- name: Read package names from deb packages.
  command: dpkg-deb -f /root/{{ item }} Package
  register: local_deb_packages_name_check
  changed_when: false
  with_items: "{{ local_deb_packages }}"

# Using apt-mark only applies to `apt` or `apt-get` actions, so we'll use a two-pass
# approach to hold the locally built packages, so that neither apt nor aptitude
# tries to upgrade them on subsequent playbook runs.

- name: Mark packages as held, so they aren't upgraded automatically (via apt).
  command: apt-mark hold {{ item.stdout }}
  register: apt_mark_hold_result
  # The packages will have the "hold" state cleared during the previous task
  # for `dpkg -i <deb>`. Therefore let's determine changed state by comparing
  # to the value prior to installation.
  changed_when: item.stdout not in apt_mark_showhold_result.stdout_lines
  when: item.stdout not in apt_mark_showhold_result.stdout_lines
  with_items: "{{ local_deb_packages_name_check.results }}"

- name: Mark packages as held, so they aren't upgraded automatically (via aptitude).
  command: aptitude hold {{ item.stdout }}
  # `aptitude hold <package>` doesn't give any meaningful output to handle idempotence,
  # so let's mark the task as no changes.
  changed_when: false
  with_items: "{{ local_deb_packages_name_check.results }}"
